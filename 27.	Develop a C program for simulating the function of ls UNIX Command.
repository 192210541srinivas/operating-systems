#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <sys/stat.h>
#include <time.h>
#include <pwd.h>
#include <grp.h>

void listDirectory(const char *dirname);

int main(int argc, char *argv[]) {
    const char *dirname;

    if (argc < 2) {
        dirname = ".";  
    } else {
        dirname = argv[1];
    }

    listDirectory(dirname);

    return 0;
}

void listDirectory(const char *dirname) {
    DIR *dir;
    struct dirent *entry;
    struct stat fileStat;
    struct passwd *pw;
    struct group *gr;
    char timebuf[80];

    dir = opendir(dirname);
    if (dir == NULL) {
        perror("Error opening directory");
        exit(EXIT_FAILURE);
    }

    printf("Contents of directory '%s':\n", dirname);
    while ((entry = readdir(dir)) != NULL) {
        char fullpath[1024];
        snprintf(fullpath, sizeof(fullpath), "%s/%s", dirname, entry->d_name);

        if (stat(fullpath, &fileStat) < 0) {
            perror("Error getting file status");
            continue;
        }

        // Print file type and permissions
        printf((S_ISDIR(fileStat.st_mode)) ? "d" : "-");
        printf((fileStat.st_mode & S_IRUSR) ? "r" : "-");
        printf((fileStat.st_mode & S_IWUSR) ? "w" : "-");
        printf((fileStat.st_mode & S_IXUSR) ? "x" : "-");
        printf((fileStat.st_mode & S_IRGRP) ? "r" : "-");
        printf((fileStat.st_mode & S_IWGRP) ? "w" : "-");
        printf((fileStat.st_mode & S_IXGRP) ? "x" : "-");
        printf((fileStat.st_mode & S_IROTH) ? "r" : "-");
        printf((fileStat.st_mode & S_IWOTH) ? "w" : "-");
        printf((fileStat.st_mode & S_IXOTH) ? "x" : "-");

        printf(" %ld", fileStat.st_nlink);

        if ((pw = getpwuid(fileStat.st_uid)) != NULL) {
            printf(" %s", pw->pw_name);
        } else {
            printf(" %d", fileStat.st_uid);
        }
        if ((gr = getgrgid(fileStat.st_gid)) != NULL) {
            printf(" %s", gr->gr_name);
        } else {
            printf(" %d", fileStat.st_gid);
        }

        printf(" %ld", fileStat.st_size);

        strftime(timebuf, sizeof(timebuf), "%b %d %H:%M", localtime(&fileStat.st_mtime));
        printf(" %s", timebuf);

        printf(" %s\n", entry->d_name);
    }

    closedir(dir);
}
