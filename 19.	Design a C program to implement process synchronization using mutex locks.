#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define NUM_THREADS 2
#define MAX_COUNT 1000000

int counter = 0;
pthread_mutex_t mutex;

void *increment_counter(void *arg);
void *decrement_counter(void *arg);

int main() {
    pthread_t threads[NUM_THREADS];
    int thread_ids[NUM_THREADS] = {0, 1};

    pthread_mutex_init(&mutex, NULL);

    pthread_create(&threads[0], NULL, increment_counter, &thread_ids[0]);
    pthread_create(&threads[1], NULL, decrement_counter, &thread_ids[1]);

    pthread_join(threads[0], NULL);
    pthread_join(threads[1], NULL);

    pthread_mutex_destroy(&mutex);

    printf("Final counter value: %d\n", counter);

    return 0;
}

void *increment_counter(void *arg) {
    int thread_id = *((int *)arg);

    for (int i = 0; i < MAX_COUNT; i++) {
        pthread_mutex_lock(&mutex);
        
        counter++;
        
        pthread_mutex_unlock(&mutex);
    }

    pthread_exit(NULL);
}

void *decrement_counter(void *arg) {
    int thread_id = *((int *)arg);

    for (int i = 0; i < MAX_COUNT; i++) {
        pthread_mutex_lock(&mutex);
        
        counter--;
                pthread_mutex_unlock(&mutex);
    }

    pthread_exit(NULL);
}
