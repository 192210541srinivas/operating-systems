#include <stdio.h>
#include <pthread.h>

void *thread_function(void *arg) {
    pthread_t tid = pthread_self();
    printf("Thread ID inside thread function: %lu\n", (unsigned long)tid);
    pthread_exit(NULL);
}

int main() {
    pthread_t tid1, tid2;
    int ret1, ret2;

    ret1 = pthread_create(&tid1, NULL, thread_function, NULL);
    if (ret1 != 0) {
        perror("pthread_create");
        return 1;
    }

    ret2 = pthread_create(&tid2, NULL, thread_function, NULL);
    if (ret2 != 0) {
        perror("pthread_create");
        return 1;
    }

    printf("Thread IDs: Thread 1 = %lu, Thread 2 = %lu\n",
           (unsigned long)tid1, (unsigned long)tid2);

    if (pthread_equal(tid1, tid2)) {
        printf("Thread 1 and Thread 2 are equal\n");
    } else {
        printf("Thread 1 and Thread 2 are not equal\n");
    }

    pthread_join(tid1, NULL);
    pthread_join(tid2, NULL);

    return 0;
}
